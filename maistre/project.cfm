<cfsetting showdebugoutput="false" ><cfparam name="session.is_logged_in" default="false"><cfset application._model_user.protect(session.is_logged_in)><!---<cfparam name="session.is_logged_in" type="boolean" default=false><cfparam name="session.user_id" type="string" default=1><cfparam name="session.user_name" type="string" default="user">---><cfparam name="url.project_id" type="numeric" default=-1><cfparam name="url.notes_page" type="numeric" default="1"><cfparam name="url.task_list_page" type="numeric" default="1"><cfparam name="url.page" default="1" type="numeric"><cfparam name="url.notes" type="string" default="project"><cfparam name="url.task_open_state" type="boolean" default="true"><cfset application._model_user.advanced_protect(url.project_id,session.user_id)><!--- constants ---><cfset tasks_per_page = 10><cfset notes_per_page = 5><cfset users_per_page = 7><cfset error = []><!--- end constants ---><!--- show_page_setup ---><cfset application._view_page.show_page_setup()><!--- show_page_setup ---><!--- show_header ---><cfset header_args={}><cfset header_args.is_logged_in=session.is_logged_in><cfset header_args.username=session.user_name><cfset header_args.user_id=session.user_id><cfset application._view_page.show_header(argumentCollection = header_args)><!--- end show_header ---><!--- show_project_details ---><cfset get_projects = application._model_project.get_projects(1,1,url.project_id)><cfset gu_args = {}><cfset gu_args.use_pagination = false><cfset gu_args.users_per_page = users_per_page><cfset gu_args.page = 0<!--- pagination is turned off with, user_pagination, so this doesnt matter, but its still required --->><cfset gu_args.project_id = url.project_id><cfset results=application._model_user.get_users(argumentCollection = gu_args)><cfset args = {} ><cfset args.users = results.query ><cfset args.project = get_projects.query ><cfset args.project_id = url.project_id><cfset args.current_user_id = session.user_id><cfset application._view_project.show_project_details(argumentCollection = args)><!--- end show_project_details ---><!--- show_user_list ---><cfset results=application._model_user.get_users(users_per_page,url.page,url.project_id)><cfset ul_args ={}><cfset ul_args.items_per_page = users_per_page><cfset ul_args.page = url.page><cfset ul_args.page_to_load = "project.cfm"><cfset ul_args.query = results.query><cfset ul_args.total_item_count= results.count><cfset ul_args.url= url><cfset ul_args.show_search= true><cfset ul_args.enable_remove= true><cfset ul_args.manager_id = get_projects.query.manager_id><cfset application._view_user.show_user_list(argumentCollection = ul_args)><!--- end show_user_list ---><!---  show_task_list --->	<cfset gt_args = {}><cfset gt_args.tasks_per_page = tasks_per_page><cfset gt_args.page = url.task_list_page><cfset gt_args.status = []><cfset gt_args.project_id = url.project_id><cfif url.task_open_state eq true>	<cfset gt_args.status = [1,2,3,4]>	<cfset gt_results = application._model_task.get_tasks(argumentCollection = gt_args)><cfelse>	<cfset gt_args.status = [5]>	<cfset gt_results = application._model_task.get_tasks(argumentCollection = gt_args)>	</cfif><cfset tlist_args = {}><cfset tlist_args.total_task_count = gt_results.count><cfset tlist_args.tasks_per_page = tasks_per_page><cfset tlist_args.page_to_load = "project.cfm"><cfset tlist_args.page = url.task_list_page><cfset tlist_args.task_query = gt_results.query><cfset tlist_args.pagination_url_var = "task_list_page"><cfset tlist_args.open_state = url.task_open_state><cfset tlist_args.url = url><cfset application._view_task.show_task_list(argumentCollection = tlist_args)><!--- end show_task_list ---><!--- show_note_list ---><cfif url.notes neq "task">	<cfset gpn_args = {}>	<cfset gpn_args.project_id = url.project_id>	<cfset gpn_args.notes_per_page = notes_per_page >	<cfset gpn_args.page = url.notes_page>	<cfset pn_results = application._model_project.get_project_notes(argumentCollection = gpn_args)>	<cfelse>		<cfset gapn_args = {}>	<cfset gapn_args.project_id = url.project_id>	<cfset gapn_args.notes_per_page = notes_per_page >	<cfset gapn_args.page = url.notes_page>	<cfset pn_results = application._model_project.get_all_task_notes(argumentCollection = gapn_args)></cfif><cfset sn_list_args = {}><cfset sn_list_args.query = pn_results.query><cfset sn_list_args.list = url.notes><cfset sn_list_args.total_item_count = pn_results.count><cfset sn_list_args.items_per_page = notes_per_page><cfset sn_list_args.page_to_load = "project.cfm"><cfset sn_list_args.page = url.notes_page><cfset sn_list_args.url = url><cfset application._view_project.show_notes_list(argumentCollection=sn_list_args)><!--- end show_note_list ---><!--- show chart ---><cfset chart_args = {}><cfset chart_args = application._model_project.get_chart(url.project_id)><cfset application._view_unique.show_chart(chart_args)><!--- end show chart ---><cfset user_args = {}><cfset user_args.users_per_page = 1><cfset user_args.page = 1><cfset user_args.user_id = session.user_id><cfset user_info = application._model_user.get_users(argumentCollection = user_args)><!--- modals ---><cfset application._view_modal.profile_modal(error, session.user_id, user_info.query, "project.cfm?project_id=#url.project_id#")>
<cfset application._view_modal.task_modal(error, results.query, url.project_id, "project")><cfset application._view_modal.note_modal(error, session.user_id, url.project_id)><!--- end modals ---><!--- end show_page_footer ---><cfset application._view_page.show_page_footer()><!--- end show_page_footer --->
